name: Docker tag image

on:
  push:
    tags: [ 'v*.*.*' ]

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: "gh-pages"
          fetch-depth: 1
      - name: Get the build version number
        id: version_number
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - name: Build branch / tag
        env:
          DOCKER_USERNAME: 'boky'
          DOCKER_PASSWORD: '${{ secrets.DOCKER_ACCESS_TOKEN }}'
          PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le"
        run: ./build.sh -t boky/postfix:$RELEASE_VERSION --push
      - name: Package helm chart
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version $RELEASE_VERSION --version $RELEASE_VERSION --destination ./gh-pages helm/mail
      - name: Create helm chart index
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: cd gh-pages && rm -rf .git && helm repo index . --url https://bokysan.github.io/docker-postfix
      - name: Upload gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          tag_name: gh-pages-${{ steps.version_number.outputs.RELEASE_VERSION }}
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
